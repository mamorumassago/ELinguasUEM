/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package frames;

import dados.*;
import java.sql.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import persistencia.ControladorDePersistencia;

/**
 *
 * @author Guilherme
 */
public class InserirReposicao extends javax.swing.JFrame {

    ArrayList<Matricula> lstMatricula;
    ArrayList<Aluno> lstAluno;
    ArrayList<Turma> lstTurma;
    ArrayList<Turma> lstTurmaAluno;
    ArrayList<Curso> lstCurso;
    ArrayList<Nivel> lstNivel;
    ArrayList<Presenca> lstPresenca;
    ArrayList<Presenca> lstPresencaMatricula;
    
    Matricula matricula;
    Presenca presenca;
    
    GerenciarReposicao gr;
    int alunoalter;
    int turmaalter;

    /**
     * Creates new form CadastrarAluno
     */
    public InserirReposicao() {
        initComponents();
        this.carregarListas();
        this.setLocationRelativeTo(null);
    }

    public InserirReposicao(GerenciarReposicao grep) {
        initComponents();
        this.carregarListas();
        gr = grep;
        alunoalter = 0;
        turmaalter = 0;
        this.setLocationRelativeTo(null);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel11 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                formMouseEntered(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Inserir Reposicao");

        jLabel2.setText("Aluno:");

        jLabel3.setText("Turma:");

        jLabel4.setText("NÃ­vel:");

        jLabel8.setText("Curso:");

        jButton1.setText("Cancelar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cadastrar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel7.setText("jLabel7");

        jLabel9.setText("jLabel9");

        jLabel5.setText("Data Reposto: ");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jLabel11.setText("Data da Reposicao: ");

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox1, 0, 197, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(103, 103, 103))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //MenuPrincipal mp = new MenuPrincipal();
        //mp.setVisible(true);
        gr.setEnabled(true);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try{
            if(jComboBox2.getSelectedIndex() == -1){
                JOptionPane.showMessageDialog(this,"Selecione qual data deseja repor","Warning",JOptionPane.WARNING_MESSAGE);
                return;
            }
            Date data;
            String dt = "";
            try{
                int ano = jDateChooser1.getCalendar().get(Calendar.YEAR);
                int mes = jDateChooser1.getCalendar().get(Calendar.MONTH);
                int dia = jDateChooser1.getCalendar().get(Calendar.DAY_OF_MONTH);

                data = new Date(ano-1900+2000,mes,dia);
                //DateFormat format = DateFormat.getDateInstance(DateFormat.SHORT);
                //dt = format.format(data);
                dt = new SimpleDateFormat("dd/MM/yyyy").format(data);
            }
            catch(Exception exdata){
                JOptionPane.showMessageDialog(this,"Selecione a data da reposicao","Warning",JOptionPane.WARNING_MESSAGE);
                return;
            }
            if(dt.equals("")){
                JOptionPane.showMessageDialog(this,"Selecione a data da reposicao","Warning",JOptionPane.WARNING_MESSAGE);
                return;
            }
            ControladorDePersistencia con = new ControladorDePersistencia();
            Reposicao reposicao = new Reposicao();
            reposicao.setId(-1);
            int idM = 0;
            for(Matricula m:lstMatricula){
                if(m.getIdAluno()==lstAluno.get(jComboBox3.getSelectedIndex()).getId()){
                    if(m.getIdTurma()==lstTurmaAluno.get(jComboBox1.getSelectedIndex()).getId()){
                        idM = m.getId();
                    }
                }
            }
            reposicao.setIdmatricula(idM);
            
            reposicao.setDatareposto(lstPresencaMatricula.get(jComboBox2.getSelectedIndex()).getData());
            reposicao.setDatareposicao(dt);
            reposicao.setStatus(1);
            boolean resultado = con.cadastraReposicao(reposicao);
            if(resultado){
                JOptionPane.showMessageDialog(this,"Reposicao Cadastrado com sucesso");
                gr.reload();
                gr.setEnabled(true);
                dispose();
            }
            else{
                JOptionPane.showMessageDialog(this,"Erro ao cadastrar","Warning",JOptionPane.WARNING_MESSAGE);
                return;
            }
        }
        catch(Exception ex){
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        // TODO add your handling code here:
        alunoalter = 1;
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        turmaalter = 1;
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered
        // TODO add your handling code here:
        if(alunoalter == 1){
            alunoalter = 0;
            preencherTurma();
            preencheNivel();
            preencheCurso();
            preencheDataReposto();
        }
        if(turmaalter == 1){
            turmaalter = 0;
            preencheNivel();
            preencheCurso();
            preencheDataReposto();
        }
    }//GEN-LAST:event_formMouseEntered

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    public void carregarListas(){
        lstAluno = new ArrayList<>();
        lstCurso = new ArrayList<>();
        lstTurma = new ArrayList<>();
        lstNivel = new ArrayList<>();;
        lstMatricula = new ArrayList<>();
        lstTurmaAluno = new ArrayList<>();
        lstPresenca = new ArrayList<>();
        ArrayList<Aluno> lstA = new ArrayList<>();
        try{
            ControladorDePersistencia con = new ControladorDePersistencia();
            lstA = con.carregaAluno();
            
            con = new ControladorDePersistencia();
            lstCurso = con.carregaCurso();
            
            con = new ControladorDePersistencia();
            lstTurma = con.carregaTurma();
            
            con = new ControladorDePersistencia();
            lstNivel = con.carregaNivel();
            
            con = new ControladorDePersistencia();
            lstMatricula = con.carregaMatricula();
            
            con = new ControladorDePersistencia();
            lstPresenca = con.carregaPresenca();
            for(Aluno a:lstA){
                int existe = 0;
                for(Matricula m:lstMatricula){
                    if(a.getId()==m.getIdAluno()){
                        existe = 1;
                    }
                }
                if(existe == 1){
                    Aluno a1 = new Aluno();
                    a1.clonarAluno(a);
                    lstAluno.add(a1);
                }
            }
        }
        catch(Exception ex){
            
        }
        preencherAluno();
        preencherTurma();
        preencheNivel();
        preencheCurso();
        preencheDataReposto();
    }
    public void preencherAluno(){
        Vector vetor = new Vector();  
        for(int i=0;i<lstAluno.size();i++){
            Aluno a = lstAluno.get(i);
            vetor.add(a.getNome());
        }
         
        DefaultComboBoxModel model = new DefaultComboBoxModel(vetor);  
        jComboBox3.setModel(model);
    }
    
    public void preencherTurma(){
        lstTurmaAluno = new ArrayList<>();
        for(Matricula m:lstMatricula){
            if(m.getIdAluno()==lstAluno.get(jComboBox3.getSelectedIndex()).getId()){
                lstTurmaAluno.add(getTurma(m.getIdTurma()));
            }
        }
        
        Vector vetor = new Vector();  
        for(int i=0;i<lstTurmaAluno.size();i++){
            Turma t = lstTurmaAluno.get(i);
            vetor.add(t.getNome());
        }
         
        DefaultComboBoxModel model = new DefaultComboBoxModel(vetor);  
        jComboBox1.setModel(model);
    }
    
    public void preencheNivel(){
        jLabel7.setText(getNivel(lstTurmaAluno.get(jComboBox1.getSelectedIndex()).getIdNivel()).getNome());
    }
    
    public void preencheCurso(){
        jLabel9.setText(getCurso(lstTurmaAluno.get(jComboBox1.getSelectedIndex()).getIdCurso()).getNome());
    }
    
    public void preencheDataReposto(){
        lstPresencaMatricula = new ArrayList<>();
        int idM = 0;
        for(Matricula m:lstMatricula){
            if(m.getIdAluno()==lstAluno.get(jComboBox3.getSelectedIndex()).getId()){
                if(m.getIdTurma()==lstTurmaAluno.get(jComboBox1.getSelectedIndex()).getId()){
                    idM = m.getId();
                }
            }
        }
        for(Presenca p:lstPresenca){
            if(p.getIdmatricula()==idM){
                if(p.getStatus()==0){
                    lstPresencaMatricula.add(p);
                }
            }
        }
        Vector vetor = new Vector();  
        for(int i=0;i<lstPresencaMatricula.size();i++){
            Presenca p = lstPresencaMatricula.get(i);
            vetor.add(p.getData());
        }
         
        DefaultComboBoxModel model = new DefaultComboBoxModel(vetor);  
        jComboBox2.setModel(model);
    }
    
    public Matricula getMatricula(int id){
        ArrayList<Matricula> listaMatricula = new ArrayList<Matricula>();
        try{
            ControladorDePersistencia con = new ControladorDePersistencia();
            listaMatricula = con.carregaMatricula();
        }
        catch(Exception ex){
        }
        Matricula m1 = new Matricula();
        for (Matricula m:listaMatricula){
            if(m.getId()==id){
                m1.clonarMatricula(m);
                return m1;
            }
        }
        return m1;
    }
    
    public Nivel getNivel(int id){
        Nivel n1 = new Nivel();
        ArrayList<Nivel> listaNivel;
        try{
            ControladorDePersistencia con = new ControladorDePersistencia();
            listaNivel = con.carregaNivel();
            for (Nivel n:listaNivel){
                if(n.getId()==id){
                    n1.clonarNivel(n);
                    return n1;
                }
            }
        }
        catch(Exception ex){
        }
        return n1;
    }
    
    public Turma getTurma(int id){
        ArrayList<Turma> listaTurma = new ArrayList<Turma>();
        try{
            ControladorDePersistencia con = new ControladorDePersistencia();
            listaTurma= con.carregaTurma();
        }
        catch(Exception ex){
        }
        Turma t1 = new Turma();
        for (Turma t:listaTurma){
            if(t.getId()==id){
                t1.clonarTurma(t);
                return t1;
            }
        }
        return t1;
    }
    
    public Curso getCurso(int id){
        ArrayList<Curso> listaCurso = new ArrayList<Curso>();
        try{
            ControladorDePersistencia con = new ControladorDePersistencia();
            listaCurso = con.carregaCurso();
        }
        catch(Exception ex){
        }
        Curso c1 = new Curso();
        for (Curso c:listaCurso){
            if(c.getId()==id){
                c1.clonarCurso(c);
                return c1;
            }
        }
        return c1;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InserirReposicao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InserirReposicao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InserirReposicao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InserirReposicao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InserirReposicao().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    // End of variables declaration//GEN-END:variables
}
