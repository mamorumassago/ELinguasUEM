/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package frames;

import dados.Aluno;
import dados.Curso;
import dados.Matricula;
import dados.Nivel;
import dados.Presenca;
import dados.Turma;
import java.sql.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import persistencia.ControladorDePersistencia;

/**
 *
 * @author Guilherme
 */
public class InserirPresenca extends javax.swing.JFrame {

    GerenciarPresenca gp;
    Presenca presenca;
    
    int op;
    ArrayList<Presenca> lstPresenca;
    int mudou;
    
    /**
     * Creates new form CadastrarAluno
     */
    public InserirPresenca() {
        initComponents();
        this.setLocationRelativeTo(null);
    }
    
    public InserirPresenca(GerenciarPresenca ger, Presenca pre, int oper) {
        initComponents();
        gp = ger;
        mudou = 0;
        presenca = pre;
        this.op = oper;
        if(op == 1){
            this.remove(jComboBox1);
        }
        if(op == 2){
            this.jLabel1.setText("Alterar Presenca");
            this.remove(jDateChooser1);
        }
        this.preencher();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jComboBox1 = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                formMouseEntered(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Alterar Presença");

        jLabel2.setText("Aluno:");

        jLabel3.setText("Turma:");

        jLabel4.setText("Nível:");

        jLabel5.setText("Dia da Presença:");

        jLabel8.setText("Curso:");

        jButton1.setText("Cancelar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Confirmar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel6.setText("jLabel6");

        jLabel7.setText("jLabel7");

        jLabel9.setText("jLabel9");

        jLabel10.setText("jLabel10");

        jCheckBox1.setText("Presente");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setText("Ausente");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox1MouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jComboBox1MouseExited(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(104, 104, 104)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(jCheckBox1)
                .addGap(41, 41, 41)
                .addComponent(jCheckBox2)
                .addContainerGap(62, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5))
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //MenuPrincipal mp = new MenuPrincipal();
        //mp.setVisible(true);
        gp.setEnabled(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Date data;
        try{
            String dt = "";
            if(op == 1){
                int ano = jDateChooser1.getCalendar().get(Calendar.YEAR);
                int mes = jDateChooser1.getCalendar().get(Calendar.MONTH);
                int dia = jDateChooser1.getCalendar().get(Calendar.DAY_OF_MONTH);

                data = new Date(ano-1900+2000,mes,dia);
                //DateFormat format = DateFormat.getDateInstance(DateFormat.SHORT);
                //dt = format.format(data);
                dt = new SimpleDateFormat("dd/MM/yyyy").format(data);
            }
            
            else{
                dt = lstPresenca.get(jComboBox1.getSelectedIndex()).getData();
            }
            if(jCheckBox1.isSelected() || jCheckBox2.isSelected()){
                presenca.setData(dt);
                if(jCheckBox1.isSelected()){
                    presenca.setStatus(1);
                }
                if(jCheckBox2.isSelected()){
                    presenca.setStatus(0);
                }
                if(op == 1){
                    gp.setPresenca(presenca);
                    try{
                        ControladorDePersistencia con = new ControladorDePersistencia();
                        con.cadastraPresenca(presenca);
                    }
                    catch(Exception exe){

                    }

                    gp.setEnabled(true);
                    this.dispose();
                }
                if(op == 2){
                    try{
                        ArrayList<Presenca> lstP = new ArrayList<Presenca>();
                        ControladorDePersistencia con = new ControladorDePersistencia();
                        lstP = con.carregaPresenca();
                        for(Presenca p2:lstP){
                            if(p2.getData().equals(presenca.getData())){
                                if(p2.getIdmatricula()==presenca.getIdmatricula()){
                                    con = new ControladorDePersistencia();
                                    presenca.setId(p2.getId());
                                    int fat = 1;
                                    if(p2.getStatus()==presenca.getStatus()){
                                        fat = 0;
                                    }
                                    else{
                                        if(p2.getStatus()==0){
                                            fat = -1;
                                        }
                                    }
                                    //presenca.setData(dt);
                                    con.alteraPresenca(presenca);
                                    gp.atualizaPresenca(presenca, fat);
                                    gp.setEnabled(true);
                                    this.dispose();
                                }
                            }
                        }
                        
                    }
                    catch(Exception ex2){
                    }
                }
            }
        }
        catch(Exception exNascimento){
            JOptionPane.showMessageDialog(this,"Selecione uma data","Warning",JOptionPane.WARNING_MESSAGE);
            return;
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
        jCheckBox2.setSelected(false);
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        // TODO add your handling code here:
        jCheckBox1.setSelected(false);
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        mudou = 1;
        
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox1MouseExited
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_jComboBox1MouseExited

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_formMouseReleased

    private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered
        // TODO add your handling code here:
        if(mudou == 0){
            return;
        }
        mudou = 0;
        if(lstPresenca.size() > 0){
            if(lstPresenca.get(jComboBox1.getSelectedIndex()).getStatus()==0){
                jCheckBox1.setSelected(false);                
                jCheckBox2.setSelected(true);
            }
            else{
                jCheckBox1.setSelected(true);
                jCheckBox2.setSelected(false);
            }
        }
    }//GEN-LAST:event_formMouseEntered

    private void jComboBox1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox1MouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jComboBox1MouseClicked

    public Aluno getAluno(int id){
        ArrayList<Aluno> listaAluno = new ArrayList<Aluno>();
        try{
            ControladorDePersistencia con = new ControladorDePersistencia();
            listaAluno = con.carregaAluno();
        }
        catch(Exception ex){
        }
        Aluno a1 = new Aluno();
        for (Aluno a:listaAluno){
            if(a.getId()==id){
                a1.clonarAluno(a);
                return a1;
            }
        }
        return a1;
    }
    
    public void preencherCBox(){
        Vector vetor = new Vector();  
        for(int i=0;i<lstPresenca.size();i++){
            Presenca p = lstPresenca.get(i);
            vetor.add(p.getData());
        }
         
        DefaultComboBoxModel model = new DefaultComboBoxModel(vetor);  
        jComboBox1.setModel(model);  
    }
    
    public void carregarPresenca(){
        lstPresenca = new ArrayList<>();
        ArrayList<Presenca> lstP = new ArrayList<>();
        try{
            ControladorDePersistencia con = new ControladorDePersistencia();
            lstP = con.carregaPresenca();
            for(Presenca p:lstP){
                if(p.getIdmatricula()==presenca.getIdmatricula()){
                    lstPresenca.add(p);
                }
            }
        }
        catch(Exception ex){
        }
    }
    
    public Turma getTurma(int id){
        ArrayList<Turma> listaTurma = new ArrayList<Turma>();
        try{
            ControladorDePersistencia con = new ControladorDePersistencia();
            listaTurma= con.carregaTurma();
        }
        catch(Exception ex){
        }
        Turma t1 = new Turma();
        for (Turma t:listaTurma){
            if(t.getId()==id){
                t1.clonarTurma(t);
                return t1;
            }
        }
        return t1;
    }
    
    public Curso getCurso(int id){
        ArrayList<Curso> listaCurso = new ArrayList<Curso>();
        try{
            ControladorDePersistencia con = new ControladorDePersistencia();
            listaCurso = con.carregaCurso();
        }
        catch(Exception ex){
        }
        Curso c1 = new Curso();
        for (Curso c:listaCurso){
            if(c.getId()==id){
                c1.clonarCurso(c);
                return c1;
            }
        }
        return c1;
    }
    
    public Matricula getMatricula(int id){
        ArrayList<Matricula> listaMatricula = new ArrayList<Matricula>();
        try{
            ControladorDePersistencia con = new ControladorDePersistencia();
            listaMatricula = con.carregaMatricula();
        }
        catch(Exception ex){
        }
        Matricula m1 = new Matricula();
        for (Matricula m:listaMatricula){
            if(m.getId()==id){
                m1.clonarMatricula(m);
                return m1;
            }
        }
        return m1;
    }
    
    public Nivel getNivel(int id){
        Nivel n1 = new Nivel();
        ArrayList<Nivel> listaNivel;
        try{
            ControladorDePersistencia con = new ControladorDePersistencia();
            listaNivel = con.carregaNivel();
            for (Nivel n:listaNivel){
                if(n.getId()==id){
                    n1.clonarNivel(n);
                    return n1;
                }
            }
        }
        catch(Exception ex){
        }
        return n1;
    }
    
    public void preencher(){
        try{
            Matricula mat = getMatricula(presenca.getIdmatricula());
            Aluno aluno = getAluno(mat.getIdAluno());
            jLabel6.setText(aluno.getNome());
            Turma turma = getTurma(mat.getIdTurma());
            jLabel7.setText(turma.getNome());
            Nivel nivel = getNivel(turma.getIdNivel());
            jLabel9.setText(nivel.getNome());
            Curso curso = getCurso(nivel.getIdcurso());
            jLabel10.setText(curso.getNome());
            if(op == 2){
                carregarPresenca();
                preencherCBox();
                if(lstPresenca.size() > 0){
                    if(lstPresenca.get(0).getStatus()==0){
                        jCheckBox1.setSelected(false);
                        jCheckBox2.setSelected(true);
                    }
                    else{
                        jCheckBox1.setSelected(true);
                        jCheckBox2.setSelected(false);
                    }
                }
            }
            /*if(presenca.getStatus() == 0){
                jCheckBox2.setSelected(true);
            }
            else{
                jCheckBox1.setSelected(true);
            }
            if(op == 2){
                //DateFormat format = DateFormat.getDateInstance(DateFormat.SHORT);
                jDateChooser1.setDateFormatString(presenca.getData());
            }
            */
        }
        catch(Exception ex){            
        }
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InserirPresenca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InserirPresenca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InserirPresenca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InserirPresenca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InserirPresenca().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JComboBox jComboBox1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    // End of variables declaration//GEN-END:variables
}
